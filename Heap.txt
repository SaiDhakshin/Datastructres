#include <stdio.h>


void heapify(int a[],int n){
    int i,parent,k,item;
    for(k=1;k<n;k++){
        item = a[k];
        i=k;
        parent = (i-1)/2;
        while((i>0) && item > a[parent]){
            a[i] = a[parent];
            i = parent;
            parent = (i-1)/2;
        }
        a[i] = item;
    }
}

void adjust(int a[],int n){
    int i,j,item;
    j=0;
    item = a[j];
    i = 2*j+1;
    while(i<=n-1){
        if(i+1<=n-1){
            if(a[i] < a[i+1]){
                i++;
            }
        }
        if(item < a[i]){
            a[j] = a[i];
            j = i;
            i = 2*j+1;
        }else{
            break;
        }
        a[j] = item;
    }
    
}

void heapsort(int a[],int n){
    int i,t;
    heapify(a,n);
    for(i=n-1;i>0;i--){
        t = a[0];
        a[0] = a[i];
        a[i] = t;
        adjust(a,i);
    }
}

void display(int a[],int n){
    int i;
    for(i=n-1;i>0;i--){
        printf(" %d ",a[i]);
    }
}

void main(){
    int a[]={50,43,56,3,2,7,12};
    int n = sizeof(a)/sizeof(a[0]);
    
    heapsort(a,n);
    display(a,n);
}